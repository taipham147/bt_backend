name: Deploy
on:
    push:
        branches:
            - main
env:
    SSH_ADDRESS: ${{ secrets.SSH_ADDRESS }}
    SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
    MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
    MYSQL_HOST: ${{ secrets.MYSQL_HOST }}

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v1    

            - name: login docker
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v2
              id: buildx

            - name: Build and Push Docker Image
              uses: docker/build-push-action@v4
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  tags: baonx/tutorials-be:latest

            - name: Pull and Run Docker Image
              id: build-deploy
              run: |
                  mkdir -p ~/.ssh
                  ssh-keyscan -H $SSH_ADDRESS  >> ~/.ssh/known_hosts
                  echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
                  ssh ubuntu@$SSH_ADDRESS "docker pull baonx/tutorials-be:latest; 
                  docker stop tutorials-be;
                  docker rm tutorials-be;
                  docker run --name tutorials-be -e MYSQL_HOST=$MYSQL_HOST -e MYSQL_PASSWORD=$MYSQL_PASSWORD -e MYSQL_USERNAME=$MYSQL_USERNAME  --log-driver awslogs --log-opt awslogs-region=ap-southeast-2 --log-opt awslogs-group='/baonx/tutorials-production' --log-opt awslogs-stream='tutorial-backend' --log-opt awslogs-create-group=true -dt -p 8080:8080 baonx/tutorials-be:latest"